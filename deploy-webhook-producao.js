const fs = require('fs');
const path = require('path');

console.log('üöÄ DEPLOY WEBHOOK PRODU√á√ÉO CORRIGIDO');
console.log('=====================================');

// 1. Verificar arquivo local
const localFile = path.join(__dirname, 'backend', 'webhooks', 'webhook-evolution-websocket.js');
const productionFile = path.join(__dirname, 'deploy-webhook', 'webhook-evolution-complete-corrigido.cjs');

console.log('1. üìÅ Verificando arquivos...');
console.log('   Local:', localFile);
console.log('   Produ√ß√£o:', productionFile);

if (!fs.existsSync(localFile)) {
  console.log('‚ùå Arquivo local n√£o encontrado');
  process.exit(1);
}

// 2. Ler arquivo local corrigido
console.log('\n2. üìñ Lendo arquivo local corrigido...');
const localContent = fs.readFileSync(localFile, 'utf8');

// 3. Verificar se tem as corre√ß√µes
const hasCorrections = localContent.includes('[PRODU√á√ÉO]') && 
                      localContent.includes('CORRE√á√ÉO: Processar MESSAGES_UPSERT');

if (!hasCorrections) {
  console.log('‚ùå Corre√ß√µes n√£o encontradas no arquivo local');
  console.log('üí° Execute a corre√ß√£o primeiro');
  process.exit(1);
}

console.log('‚úÖ Corre√ß√µes encontradas no arquivo local');

// 4. Copiar para produ√ß√£o
console.log('\n3. üìã Copiando para produ√ß√£o...');
try {
  // Converter para CommonJS se necess√°rio
  let productionContent = localContent;
  
  // Substituir imports ES6 por require se necess√°rio
  if (productionContent.includes('import')) {
    productionContent = productionContent
      .replace(/import\s+(\w+)\s+from\s+['"]([^'"]+)['"]/g, "const $1 = require('$2')")
      .replace(/import\s*{([^}]+)}\s+from\s+['"]([^'"]+)['"]/g, "const {$1} = require('$2')");
  }
  
  fs.writeFileSync(productionFile, productionContent);
  console.log('‚úÖ Arquivo copiado para produ√ß√£o');
  
} catch (error) {
  console.log('‚ùå Erro ao copiar:', error.message);
  process.exit(1);
}

// 5. Instru√ß√µes de deploy
console.log('\n4. üìã INSTRU√á√ïES DE DEPLOY:');
console.log('================================');
console.log('');
console.log('üîß Para aplicar as corre√ß√µes em produ√ß√£o:');
console.log('');
console.log('1. Acesse o EasyPanel VPS');
console.log('2. V√° para o projeto bkcrm');
console.log('3. Encontre o container do webhook');
console.log('4. Fa√ßa upload do arquivo:');
console.log(`   ${productionFile}`);
console.log('');
console.log('5. Reinicie o container do webhook');
console.log('6. Verifique os logs para confirmar');
console.log('');
console.log('üß™ Para testar ap√≥s deploy:');
console.log('   node teste-webhook-producao.js');
console.log('');
console.log('‚úÖ DEPLOY PREPARADO!');
console.log('Aguarde o deploy em produ√ß√£o para testar.'); 
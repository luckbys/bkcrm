import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from '../ui/button';
import { Badge } from '../ui/badge';
import { X, Phone, Mail, User } from 'lucide-react';
export const ChatSidebar = ({ participant, configuration, state, onClose, messagesCount, unreadCount }) => {
    return (_jsxs("div", { className: "w-80 border-l bg-gray-50 flex flex-col", children: [_jsx("div", { className: "p-4 border-b bg-white", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h3", { className: "font-semibold text-gray-900", children: "Informa\u00E7\u00F5es" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: onClose, children: _jsx(X, { className: "w-4 h-4" }) })] }) }), _jsxs("div", { className: "flex-1 p-4 space-y-4", children: [participant && (_jsxs("div", { className: "bg-white rounded-lg p-4", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "Cliente" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(User, { className: "w-4 h-4 text-gray-400" }), _jsx("span", { className: "text-sm", children: participant.name })] }), participant.email && (_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Mail, { className: "w-4 h-4 text-gray-400" }), _jsx("span", { className: "text-sm", children: participant.email })] })), participant.phone && (_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Phone, { className: "w-4 h-4 text-gray-400" }), _jsx("span", { className: "text-sm", children: participant.phone })] })), _jsx(Badge, { variant: participant.isOnline ? 'default' : 'secondary', children: participant.isOnline ? 'Online' : 'Offline' })] })] })), _jsxs("div", { className: "bg-white rounded-lg p-4", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "Estat\u00EDsticas" }), _jsxs("div", { className: "space-y-2 text-sm", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Total de mensagens:" }), _jsx("span", { className: "font-medium", children: messagesCount })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-600", children: "N\u00E3o lidas:" }), _jsx("span", { className: "font-medium", children: unreadCount })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Canal:" }), _jsx("span", { className: "font-medium", children: configuration.channel.name })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Status:" }), _jsx(Badge, { variant: state.isConnected ? 'default' : 'destructive', children: state.connectionStatus })] })] })] }), _jsxs("div", { className: "bg-white rounded-lg p-4", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "Configura\u00E7\u00F5es" }), _jsxs("div", { className: "space-y-2 text-sm", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Tempo real:" }), _jsx(Badge, { variant: configuration.settings.realTimeEnabled ? 'default' : 'secondary', children: configuration.settings.realTimeEnabled ? 'Ativo' : 'Inativo' })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Upload de arquivos:" }), _jsx(Badge, { variant: configuration.settings.allowedFileTypes.length > 0 ? 'default' : 'secondary', children: configuration.settings.allowedFileTypes.length > 0 ? 'Permitido' : 'Bloqueado' })] })] })] })] })] }));
};
